{"version":3,"sources":["Navigation.tsx","Notification.tsx","Wallet.tsx","index.tsx"],"names":["Navigation","wallet","useWallet","require","Notification","message","variant","className","Wallet","network","WalletAdapterNetwork","Devnet","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getTorusWallet","getLedgerWallet","getSolletWallet","getSolletExtensionWallet","onError","useCallback","error","toast","custom","name","ConnectionProvider","WalletProvider","autoConnect","position","reverseOrder","ReactDOM","render","document","getElementById"],"mappings":"6aAIaA,EAAiB,WAC1B,IAAQC,EAAWC,cAAXD,OAER,OACI,gCACI,oDACA,gCACI,cAAC,IAAD,IACCA,GAAU,cAAC,IAAD,WCT3BE,EAAQ,KAOD,IAAMC,EAAsC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC3D,OAAO,qBAAKC,UAAS,kDAA6CD,GAA3D,SAAuED,KCOrEG,EAAa,WACtB,IAAMC,EAAUC,IAAqBC,OAC/BC,EAAWC,mBAAQ,kBAAMC,YAAcL,KAAU,CAACA,IAIlDM,EAAUF,mBACZ,iBAAM,CACFG,cACAC,cACAC,cACAC,cACAC,cACAC,YAAgB,CAAEZ,YAClBa,YAAyB,CAAEb,eAE/B,CAACA,IAGCc,EAAUC,uBACZ,SAACC,GAAD,OACIC,IAAMC,OACF,cAAC,EAAD,CACItB,QAASoB,EAAMpB,QAAN,UAAmBoB,EAAMG,KAAzB,aAAkCH,EAAMpB,SAAYoB,EAAMG,KACnEtB,QAAQ,aAGpB,IAGJ,OACI,cAACuB,EAAA,EAAD,CAAoBjB,SAAUA,EAA9B,SACI,eAACkB,EAAA,EAAD,CAAgBf,QAASA,EAASQ,QAASA,EAASQ,aAAW,EAA/D,UACI,cAAC,IAAD,UACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAASC,SAAS,cAAcC,cAAc,UCjD9D9B,EAAQ,KACRA,EAAQ,KAER+B,IAASC,OACL,cAAC,aAAD,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.517cd6d9.chunk.js","sourcesContent":["import { useWallet } from '@solana/wallet-adapter-react';\r\nimport { WalletDisconnectButton, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\r\nimport React, { FC } from 'react';\r\n\r\nexport const Navigation: FC = () => {\r\n    const { wallet } = useWallet();\r\n\r\n    return (\r\n        <nav>\r\n            <h1>Solana Starter App</h1>\r\n            <div>\r\n                <WalletMultiButton />\r\n                {wallet && <WalletDisconnectButton />}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\n// Use require instead of import, and order matters\r\nrequire('./notification.css');\r\n\r\nexport interface NotificationProps {\r\n    message: string;\r\n    variant: 'error' | 'info' | 'success';\r\n}\r\n\r\nexport const Notification: FC<NotificationProps> = ({ message, variant }) => {\r\n    return <div className={`wallet-notification wallet-notification-${variant}`}>{message}</div>;\r\n};\r\n","import { WalletAdapterNetwork, WalletError } from '@solana/wallet-adapter-base';\r\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\r\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\r\nimport {\r\n    getLedgerWallet,\r\n    getPhantomWallet,\r\n    getSlopeWallet,\r\n    getSolflareWallet,\r\n    getSolletExtensionWallet,\r\n    getSolletWallet,\r\n    getTorusWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport React, { FC, useCallback, useMemo } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { Navigation } from './Navigation';\r\nimport { Notification } from './Notification';\r\n\r\nexport const Wallet: FC = () => {\r\n    const network = WalletAdapterNetwork.Devnet;\r\n    const endpoint = useMemo(() => clusterApiUrl(network), [network]);\r\n\r\n    // @solana/wallet-adapter-wallets imports all the adapters but supports tree shaking --\r\n    // Only the wallets you want to support will be compiled into your application\r\n    const wallets = useMemo(\r\n        () => [\r\n            getPhantomWallet(),\r\n            getSlopeWallet(),\r\n            getSolflareWallet(),\r\n            getTorusWallet(),\r\n            getLedgerWallet(),\r\n            getSolletWallet({ network }),\r\n            getSolletExtensionWallet({ network }),\r\n        ],\r\n        [network]\r\n    );\r\n\r\n    const onError = useCallback(\r\n        (error: WalletError) =>\r\n            toast.custom(\r\n                <Notification\r\n                    message={error.message ? `${error.name}: ${error.message}` : error.name}\r\n                    variant=\"error\"\r\n                />\r\n            ),\r\n        []\r\n    );\r\n\r\n    return (\r\n        <ConnectionProvider endpoint={endpoint}>\r\n            <WalletProvider wallets={wallets} onError={onError} autoConnect>\r\n                <WalletModalProvider>\r\n                    <Navigation />\r\n                </WalletModalProvider>\r\n                <Toaster position=\"bottom-left\" reverseOrder={false} />\r\n            </WalletProvider>\r\n        </ConnectionProvider>\r\n    );\r\n};\r\n","import React, { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Wallet } from './Wallet';\r\n\r\n// Use require instead of import, and order matters\r\nrequire('@solana/wallet-adapter-react-ui/styles.css');\r\nrequire('./index.css');\r\n\r\nReactDOM.render(\r\n    <StrictMode>\r\n        <Wallet />\r\n    </StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}